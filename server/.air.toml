# Air 配置文件
# 工作目录设置为项目根目录
root = "."
testdata_dir = "testdata"
tmp_dir = "tmp"

[build]
  # 构建参数
  args_bin = []
  # 二进制文件输出路径
  bin = "./tmp/main"
  # 构建命令 - 从cmd目录构建
  cmd = "go build -o ./tmp/main ./cmd"
  # 构建延迟时间（毫秒）
  delay = 1000
  # 排除的目录
  exclude_dir = ["assets", "tmp", "vendor", "testdata", "web", ".git", ".idea", ".vscode"]
  # 排除的文件
  exclude_file = []
  # 排除的文件正则表达式
  exclude_regex = ["_test.go", ".*\\.db$", ".*\\.log$"]
  # 是否排除未修改的文件
  exclude_unchanged = false
  # 是否跟随符号链接
  follow_symlink = false
  # 完整的二进制文件路径
  full_bin = ""
  # 包含的目录
  include_dir = ["cmd", "internal", "configs"]
  # 包含的文件扩展名
  include_ext = ["go", "tpl", "tmpl", "html", "yaml", "yml"]
  # 包含的文件
  include_file = []
  # 杀死进程的延迟时间
  kill_delay = "0s"
  # 构建错误日志文件
  log = "build-errors.log"
  # 是否使用轮询模式
  poll = false
  # 轮询间隔（毫秒）
  poll_interval = 0
  # 构建后执行的命令
  post_cmd = []
  # 构建前执行的命令
  pre_cmd = []
  # 是否重新运行
  rerun = false
  # 重新运行延迟时间（毫秒）
  rerun_delay = 500
  # 是否发送中断信号
  send_interrupt = false
  # 遇到错误时是否停止
  stop_on_error = true

[color]
  # 应用输出颜色
  app = ""
  # 构建输出颜色
  build = "yellow"
  # 主要输出颜色
  main = "magenta"
  # 运行器输出颜色
  runner = "green"
  # 监视器输出颜色
  watcher = "cyan"

[log]
  # 是否只显示主要日志
  main_only = false
  # 是否静默模式
  silent = false
  # 是否显示时间
  time = true

[misc]
  # 退出时是否清理
  clean_on_exit = true

[proxy]
  # 应用端口
  app_port = 8080
  # 是否启用代理
  enabled = false
  # 代理端口
  proxy_port = 0

[screen]
  # 重新构建时是否清屏
  clear_on_rebuild = true
  # 是否保持滚动
  keep_scroll = false
