// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// BuildTasksColumns holds the columns for the "build_tasks" table.
	BuildTasksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"pending", "running", "success", "failed"}},
		{Name: "log_path", Type: field.TypeString, Nullable: true},
		{Name: "duration", Type: field.TypeInt, Nullable: true},
		{Name: "started_at", Type: field.TypeTime, Nullable: true},
		{Name: "finished_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "project_builds", Type: field.TypeInt},
	}
	// BuildTasksTable holds the schema information for the "build_tasks" table.
	BuildTasksTable = &schema.Table{
		Name:       "build_tasks",
		Columns:    BuildTasksColumns,
		PrimaryKey: []*schema.Column{BuildTasksColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "build_tasks_projects_builds",
				Columns:    []*schema.Column{BuildTasksColumns[7]},
				RefColumns: []*schema.Column{ProjectsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ProjectsColumns holds the columns for the "projects" table.
	ProjectsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "repo_url", Type: field.TypeString},
		{Name: "branch", Type: field.TypeString, Default: "master"},
		{Name: "build_cmd", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "last_build_at", Type: field.TypeTime, Nullable: true},
		{Name: "user_projects", Type: field.TypeInt},
	}
	// ProjectsTable holds the schema information for the "projects" table.
	ProjectsTable = &schema.Table{
		Name:       "projects",
		Columns:    ProjectsColumns,
		PrimaryKey: []*schema.Column{ProjectsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "projects_users_projects",
				Columns:    []*schema.Column{ProjectsColumns[8]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "gitee_token", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		BuildTasksTable,
		ProjectsTable,
		UsersTable,
	}
)

func init() {
	BuildTasksTable.ForeignKeys[0].RefTable = ProjectsTable
	ProjectsTable.ForeignKeys[0].RefTable = UsersTable
}
